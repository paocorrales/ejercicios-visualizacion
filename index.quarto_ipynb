{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Escalas y anotaciones\"\n",
        "webr: \n",
        "  packages: ['ggplot2', 'datos', 'ggforce'] # Install R packages on document open\n",
        "  cell-options:\n",
        "    autorun: true\n",
        "format: live-html\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "A continuación encontrarás una serie de ejercicios para resolver. Cada uno está asociado a un bloque de código donde podés escribir, modificar y ejecutar código de R para ver el resultado. \n",
        "Tené en cuenta que al cerrar esta pestaña del explorador, el código se pierde. Si querés guardar algo, copialo y pegalo en un archivo independiente.\n",
        "\n",
        "Los paquetes `ggplot2` y `datos` ya están cargados y listos para usar.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "#| context: setup\n",
        "library(datos)\n",
        "library(ggplot2)\n",
        "library(ggforce)\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Etiquetas y anotaciones\n",
        "\n",
        "El siguiente gráfico muestra la cantidad diamantes para cada tipo de corte y claridad. No tiene título y las etiquetas de los ejes y leyenda no son muy prolijos. Usá la función `labs()` para agregar una nueva capa al gráfico que resuelta este problema.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "#| autorun: true\n",
        "\n",
        "diamantes |> \n",
        "  ggplot(aes(corte)) +\n",
        "  geom_bar(aes(fill = claridad))\n",
        "\n",
        "#Agrega la capa que falta acá\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "Ahora queremos resaltar el diamante de mayor quilate en la base de datos. Usá alguna función de ggforce para agregar una anotación que lo resalté. Podés probar, por ejemplo, con `geom_mark_circle()` o `geom_mark_elipse()`. Recordá que tendrás que usar el argumento filter para quedarte con el máximo.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "diamantes |> \n",
        "  ggplot(aes(quilate, precio)) +\n",
        "  geom_point(aes(color = claridad))\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Escalas de colores\n",
        "\n",
        "Reutilizando el gráfico de la cantidad de diamantas (primer ejercicio), agregá ahora una capa para modificar la escala de colores. \n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "# Agregá tu código acá\n",
        "\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "¡Último desafío! \n",
        "\n",
        "Intentá reprodicir este gráfico usando `scale_fill_manual()`, no tienen que ser exacto pero se debe ver igual de lindo!\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "#| autorun: true\n",
        "#| echo: false\n",
        "\n",
        "diamantes |> \n",
        "  ggplot(aes(corte)) +\n",
        "  geom_bar(aes(fill = claridad)) +\n",
        "  scale_fill_manual(values = c(\"orange\", \"yellow\", \"red\", \"pink\", \"blue\", \"black\", \"green\", \"grey\"))\n",
        "```\n",
        "\n",
        "```{webr}\n",
        "# Agregá tu código acá\n",
        "\n",
        "```"
      ],
      "id": "e721e6cf"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\tonin\\anaconda3\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}